/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface MemoryServiceContract {
  service_id: "memory_service";
  title?: string;
  version: string;
  purpose: string;
  stores: {
    session_history: {
      room_id: string;
      summary: string;
      ts: string;
    }[];
    signals: {
      tones: string[];
      residues: string[];
      readiness: "ready" | "hesitant" | "reluctant" | "unknown";
      joy_sample?: "present" | "absent" | null;
      ts: string;
    }[];
    commits: {
      text: string;
      pace: "NOW" | "HOLD" | "LATER" | "SOFT_HOLD";
      consent_id: string;
      ts: string;
    }[];
  };
  consent: {
    founder_visible: boolean;
    /**
     * @minItems 1
     */
    founder_controls: ["view" | "edit" | "delete" | "pin", ...("view" | "edit" | "delete" | "pin")[]];
    default_retention_days: number;
    hard_delete_supported: boolean;
  };
  api: {
    write: ("append_session_event" | "upsert_signal" | "record_commit")[];
    read: ("get_session_history" | "get_signals" | "get_commits")[];
    manage: ("delete_item" | "pin_item" | "update_item")[];
  };
  inputs: {
    session_state_ref: string;
    payload: {
      [k: string]: unknown;
    };
  };
  outputs: {
    status: "ok" | "error";
    data?: {
      [k: string]: unknown;
    } | null;
    timestamp: string;
  };
  retention: {
    signals_days: number;
    session_history_days: number;
    commits_days: number;
    auto_prune: boolean;
  };
  safety: {
    pii_policy: string;
    enforce_consent_on_read: boolean;
    enforce_consent_on_write: boolean;
  };
  telemetry?: {
    reads?: number;
    writes?: number;
    deletes?: number;
    latency_ms?: number;
  };
}
